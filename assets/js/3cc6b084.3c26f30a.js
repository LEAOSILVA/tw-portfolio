"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7260],{3128:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/planilha-excel-borda-dfb50c5d637cba6085d5a544b3eca190.png"},4659:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>I,contentTitle:()=>C,default:()=>F,frontMatter:()=>A,metadata:()=>s,toc:()=>O});const s=JSON.parse('{"id":"docs-example/feature-spec","title":"Feature spec","description":"Sensedia Integrations uses Apache Camel components and EIPs to build integration flows.","source":"@site/docs/docs-example/feature-spec.md","sourceDirName":"docs-example","slug":"/docs-example/feature-spec","permalink":"/tw-portfolio/docs/docs-example/feature-spec","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"FAQs","permalink":"/tw-portfolio/docs/docs-example/faqs"},"next":{"title":"Glossary","permalink":"/tw-portfolio/docs/docs-example/glossary"}}');var r=t(4848),a=t(8453),l=t(6540),o=t(4164),i=t(3104),d=t(6347),c=t(205),h=t(7485),u=t(1682),p=t(679);function m(e){return l.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function f(e){const{values:n,children:t}=e;return(0,l.useMemo)(()=>{const e=n??function(e){return m(e).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s}))}(t);return function(e){const n=(0,u.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function v({queryString:e=!1,groupId:n}){const t=(0,d.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,h.aZ)(s),(0,l.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=f(e),[a,o]=(0,l.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r})),[i,d]=v({queryString:t,groupId:s}),[h,u]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,p.Dv)(n);return[t,(0,l.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),m=(()=>{const e=i??h;return x({value:e,tabValues:r})?e:null})();(0,c.A)(()=>{m&&o(m)},[m]);return{selectedValue:a,selectValue:(0,l.useCallback)(e=>{if(!x({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),u(e)},[d,u,r]),tabValues:r}}var b=t(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g({className:e,block:n,selectedValue:t,selectValue:s,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const n=e.currentTarget,r=l.indexOf(n),o=a[r].value;o!==t&&(d(n),s(o))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:s})=>(0,r.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:h,onClick:c,...s,className:(0,o.A)("tabs__item",j.tabItem,s?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function w({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find(e=>e.props.value===t);return e?(0,l.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function E(e){const n=y(e);return(0,r.jsxs)("div",{className:(0,o.A)("tabs-container",j.tabList),children:[(0,r.jsx)(g,{...n,...e}),(0,r.jsx)(w,{...n,...e})]})}function S(e){const n=(0,b.A)();return(0,r.jsx)(E,{...e,children:m(e.children)},String(n))}const T={tabItem:"tabItem_Ymn6"};function N({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,o.A)(T.tabItem,t),hidden:n,children:e})}const A={sidebar_position:2},C="Feature spec",I={},O=[{value:"Marshal/Unmarshal",id:"marshalunmarshal",level:2},{value:"Custom",id:"custom",level:3},{value:"JSON Format",id:"json-format",level:3},{value:"Excel vs. JSON",id:"excel-vs-json",level:3},{value:"Code example",id:"code-example",level:3}];function P(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"feature-spec",children:"Feature spec"})}),"\n",(0,r.jsxs)(n.p,{children:["Sensedia Integrations uses Apache Camel components and EIPs to build integration flows.\nThe ",(0,r.jsx)(n.strong,{children:"Marshal"})," and ",(0,r.jsx)(n.strong,{children:"Unmarshal"})," EIPs enable interoperability between systems by transforming data across different format types."]}),"\n",(0,r.jsxs)(n.p,{children:["The excerpt below introduces the ",(0,r.jsx)(n.strong,{children:"Custom"})," format type, which allows users to process Excel spreadsheets within an integration flow using the Marshal/Unmarshal EIPs."]}),"\n",(0,r.jsx)(n.h2,{id:"marshalunmarshal",children:"Marshal/Unmarshal"}),"\n",(0,r.jsx)(n.p,{children:"Marshal and Unmarshal are fundamental processes for data manipulation, enabling  interoperability between systems."}),"\n","\n",(0,r.jsxs)(S,{children:[(0,r.jsxs)(N,{value:"marshal",label:"Marshal",default:!0,children:[(0,r.jsx)(n.p,{children:"Marshal is used in the process of transforming data from Camel's internal format into a standardized external format, such as JSON, XML, CSV, or others."}),(0,r.jsx)(n.p,{children:"This conversion is essential to integrate the flow with external systems, send messages to APIs, or store information in files in a structured way."})]}),(0,r.jsxs)(N,{value:"unmarshal",label:"Unmarshal",children:[(0,r.jsx)(n.p,{children:"Unmarshal is used to the reverse process, where data received in an external format (e.g., JSON, XML, CSV) is converted into the internal format used by Camel."}),(0,r.jsx)(n.p,{children:"This  step is necessary for messages to be processed, handled, or routed within Camel's\nintegration flow."})]})]}),"\n",(0,r.jsx)(n.h3,{id:"custom",children:"Custom"}),"\n",(0,r.jsxs)(n.p,{children:["In the list of available data format types in ",(0,r.jsx)(n.strong,{children:"Data Format Type"}),", there is the ",(0,r.jsx)(n.strong,{children:"Custom"})," option."]}),"\n",(0,r.jsxs)(n.p,{children:["With it, you can use ",(0,r.jsx)(n.strong,{children:"Excel"})," as a reference, allowing the integration flow to process files in ",(0,r.jsx)(n.code,{children:".xls"})," and ",(0,r.jsx)(n.code,{children:".xlsx"})," formats."]}),"\n",(0,r.jsxs)(n.p,{children:["This data format will convert the rows of the specified spreadsheet into an array of JSON objects.",(0,r.jsx)(n.br,{}),"\n","The JSON object generated for each cell will contain, in addition to the value, metadata about the data type."]}),"\n",(0,r.jsx)(n.admonition,{title:"NOTE",type:"note",children:(0,r.jsx)(n.p,{children:"Spreadsheet visual styles (cell color, font color, bold, borders, and others) are not imported."})}),"\n",(0,r.jsx)(n.p,{children:"To use the component, consider these guidelines:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The setHeader ",(0,r.jsx)(n.code,{children:"SensediaExcelFormat"})," indicates whether the file is ",(0,r.jsx)(n.code,{children:".xls"})," or ",(0,r.jsx)(n.code,{children:".xlsx"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If the value provided is different, the component will throw an error."}),"\n",(0,r.jsxs)(n.li,{children:["If the setHeader is not sent, ",(0,r.jsx)(n.code,{children:".xlsx"})," will be assumed by default."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The setHeader ",(0,r.jsx)(n.code,{children:"SensediaExcelSheetNames"})," provides a list of sheet names, separated by commas."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Only the sheets listed in the setHeader will be processed."}),"\n",(0,r.jsx)(n.li,{children:"If any listed sheet does not exist in the file, it will be ignored."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the setHeader ",(0,r.jsx)(n.code,{children:"SensediaExcelSheetNames"})," exists but none of the names match a sheet in the file, the component will throw an error."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The use of formulas is allowed. However, if the formula is incorrect, the cell in Excel will indicate an error."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"json-format",children:"JSON Format"}),"\n",(0,r.jsx)(n.p,{children:"After converting an Excel file to JSON, the data is organized as shown in the JSON Schema below:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="JSON Schema"',children:'{\n  "type": "object",\n  "$schema": "https://json-schema.org/draft/2020-12/schema",\n  "title": "Excel spreadsheet data schema",\n  "description": "Schema for a data structure representing one or more spreadsheets with rows and cells.",\n  "properties": {\n    "sheets": {\n      "description": "An array containing data for each sheet",\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "name": {\n            "description": "The name of the sheet.",\n            "type": "string"\n          },\n          "rows": {\n            "description": "The rows within a single sheet",\n            "type": "array",\n            "items": {\n              "type": "object",\n              "properties": {\n                "cells": {\n                  "description": "The rows within a single row",\n                  "type": "array",\n                  "items": {\n                    "type": "object",\n                    "properties": {\n                      "v": {\n                        "description": "The value of the cell. Can be a string, a number, or a boolean.",\n                        "oneOf": [\n                          { "type": "string" },\n                          { "type": "number" },\n                          { "type": "boolean" }\n                        ]\n                      },\n                      "addr": {\n                        "description": "The address of the cell (e.g., \'A1\').",\n                        "type": "string"\n                      },\n                      "type": {\n                        "description": "The data type of the cell.",\n                        "type": "string",\n                        "enum": [\n                          "str",\n                          "num",\n                          "bool",\n                          "blank",\n                          "formula"\n                        ],\n                        "default": "str"\n                      },\n                      "fmt": {\n                        "description": "The formatting string for the cell\'s value.",\n                        "type": "string",\n                        "default": "General"\n                      }\n                    },\n                    "required": [\n                      "addr"\n                    ],\n                    "additionalProperties": false\n                  }\n                }\n              },\n              "required": [\n                "cells"\n              ],\n              "additionalProperties": false\n            }\n          }\n        },\n        "required": [\n          "name",\n          "rows"\n        ],\n        "additionalProperties": false\n      }\n    }\n  },\n  "required": [\n    "sheets"\n  ],\n  "additionalProperties": false\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"excel-vs-json",children:"Excel vs. JSON"}),"\n",(0,r.jsx)(n.p,{children:"Now, compare a spreadsheet with its version in JSON format:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Excel"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Excel spreadsheet",src:t(3128).A+"",width:"896",height:"164"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"JSON"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="Spreadsheet content in JSON format"',children:'{\n  "sheets": [\n    {\n      "name": "Sheet1",\n      "rows": [\n        {\n          "cells": [\n            {\n              "v": "Product",\n              "addr": "A1"\n            },\n            {\n              "v": "Unit Price",\n              "addr": "B1"\n            },\n            {\n              "v": "Date/time",\n              "addr": "C1"\n            },\n            {\n              "v": "Active",\n              "addr": "D1"\n            },\n            {\n              "v": "Quantity",\n              "addr": "E1"\n            },\n            {\n              "v": "Discount (%)",\n              "addr": "F1"\n            },\n            {\n              "v": "Total Price",\n              "addr": "G1"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "Pen",\n              "addr": "A2"\n            },\n            {\n              "type": "num",\n              "v": 2.5,\n              "addr": "B2"\n            },\n            {\n              "type": "num",\n              "v": 45915.4131373611,\n              "addr": "C2",\n              "fmt": "m/d/yyyy\\\\ h:mm:ss"\n            },\n            {\n              "type": "bool",\n              "v": true,\n              "addr": "D2",\n              "fmt": "\\"TRUE\\";\\"TRUE\\";\\"FALSE\\""\n            },\n            {\n              "type": "num",\n              "v": 10,\n              "addr": "E2"\n            },\n            {\n              "type": "num",\n              "v": 0,\n              "addr": "F2"\n            },\n            {\n              "type": "num",\n              "v": 25,\n              "addr": "G2"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "Notebook",\n              "addr": "A3"\n            },\n            {\n              "type": "num",\n              "v": 15,\n              "addr": "B3"\n            },\n            {\n              "type": "num",\n              "v": 45915.4131373611,\n              "addr": "C3",\n              "fmt": "m/d/yyyy\\\\ h:mm:ss"\n            },\n            {\n              "type": "bool",\n              "v": true,\n              "addr": "D3",\n              "fmt": "\\"TRUE\\";\\"TRUE\\";\\"FALSE\\""\n            },\n            {\n              "type": "num",\n              "v": 5,\n              "addr": "E3"\n            },\n            {\n              "type": "num",\n              "v": 10,\n              "addr": "F3"\n            },\n            {\n              "type": "num",\n              "v": 67.5,\n              "addr": "G3"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "Pencil",\n              "addr": "A4"\n            },\n            {\n              "type": "num",\n              "v": 1.5,\n              "addr": "B4"\n            },\n            {\n              "type": "num",\n              "v": 45915.4131373611,\n              "addr": "C4",\n              "fmt": "m/d/yyyy\\\\ h:mm:ss"\n            },\n            {\n              "type": "bool",\n              "v": true,\n              "addr": "D4",\n              "fmt": "\\"TRUE\\";\\"TRUE\\";\\"FALSE\\""\n            },\n            {\n              "type": "num",\n              "v": 20,\n              "addr": "E4"\n            },\n            {\n              "type": "num",\n              "v": 5,\n              "addr": "F4"\n            },\n            {\n              "type": "num",\n              "v": 28.5,\n              "addr": "G4"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "Eraser",\n              "addr": "A5"\n            },\n            {\n              "type": "num",\n              "v": 3,\n              "addr": "B5"\n            },\n            {\n              "type": "num",\n              "v": 45915.4131373611,\n              "addr": "C5",\n              "fmt": "m/d/yyyy\\\\ h:mm:ss"\n            },\n            {\n              "type": "bool",\n              "v": true,\n              "addr": "D5",\n              "fmt": "\\"TRUE\\";\\"TRUE\\";\\"FALSE\\""\n            },\n            {\n              "type": "num",\n              "v": 8,\n              "addr": "E5"\n            },\n            {\n              "type": "num",\n              "v": 0,\n              "addr": "F5"\n            },\n            {\n              "type": "num",\n              "v": 24,\n              "addr": "G5"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "Ruler",\n              "addr": "A6"\n            },\n            {\n              "type": "num",\n              "v": 4.5,\n              "addr": "B6"\n            },\n            {\n              "type": "num",\n              "v": 45915.4131373611,\n              "addr": "C6",\n              "fmt": "m/d/yyyy\\\\ h:mm:ss"\n            },\n            {\n              "type": "bool",\n              "v": false,\n              "addr": "D6",\n              "fmt": "\\"TRUE\\";\\"TRUE\\";\\"FALSE\\""\n            },\n            {\n              "type": "num",\n              "v": 3,\n              "addr": "E6"\n            },\n            {\n              "type": "num",\n              "v": 15,\n              "addr": "F6"\n            },\n            {\n              "type": "num",\n              "v": 11.475,\n              "addr": "G6"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "General Total",\n              "addr": "A7"\n            },\n            {\n              "type": "num",\n              "v": 156.475,\n              "addr": "G7"\n            }\n          ]\n        },\n        {\n          "cells": [\n            {\n              "v": "Average Unit Price",\n              "addr": "A8"\n            },\n            {\n              "type": "num",\n              "v": 5.3,\n              "addr": "G8"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"code-example",children:"Code example"}),"\n",(0,r.jsxs)(n.p,{children:["This flow exposes a REST endpoint (",(0,r.jsx)(n.code,{children:"GET /teste-excel"}),") that, when called, downloads an Excel file from an SFTP server, converts its content to JSON, and returns the result."]}),"\n",(0,r.jsx)(n.p,{children:"Here is the flow in detail:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Receives the REST request."}),"\n",(0,r.jsx)(n.li,{children:"Logs the start of the file download via SFTP."}),"\n",(0,r.jsx)(n.li,{children:"Downloads the file from the SFTP server."}),"\n",(0,r.jsx)(n.li,{children:"Logs the completion of the download and the conversion to JSON."}),"\n",(0,r.jsxs)(n.li,{children:["Converts the content to ",(0,r.jsx)(n.code,{children:"byte[]"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Defines in the setHeader the sheets to be processed (",(0,r.jsx)(n.code,{children:"test1,test2"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.code,{children:"marshal"})," with the ",(0,r.jsx)(n.code,{children:"excel"})," (custom) data format to transform the file into JSON."]}),"\n",(0,r.jsxs)(n.li,{children:["Defines the ",(0,r.jsx)(n.code,{children:"Content-Type"})," setHeader to ",(0,r.jsx)(n.code,{children:"application/json"})," for the response."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="Example of flow using the custom component"',children:'\n- from:\n    uri: rest:get:/teste-excel\n    steps:\n      - log:\n          message: "Starting file download via SFTP."\n      - pollEnrich:\n          expression:\n            simple: "sftp:eu-central-1.sftpcloud.io:22/download?username={{user}}&password={{pass}}&passiveMode=true&delete=false&fileName={{file}}&binary=true&knownHostsFile=/dev/null&strictHostKeyChecking=no"\n      - log:\n          message: "Download concluded. Converting to JSON."\n      - convertBodyTo:\n          type: byte[]\n      - setHeader:\n          name: SensediaExcelSheetNames\n          expression:\n            constant:\n              expression: test1,test2\n      - marshal:\n          custom:\n            ref: excel\n      - setHeader:\n          name: Content-Type\n          constant: application/json\n'})}),"\n",(0,r.jsxs)(n.admonition,{title:"IMPORTANT",type:"important",children:[(0,r.jsxs)(n.p,{children:["Excel can also be used in flows with the ",(0,r.jsx)(n.strong,{children:"EIP unmarshal"}),"."]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In this case, the ",(0,r.jsx)(n.strong,{children:"addr"})," field in the input JSON will not be considered."]}),"\n",(0,r.jsx)(n.li,{children:"Rows and columns will be built based solely on the order of rows and cells."}),"\n",(0,r.jsx)(n.li,{children:"The result of the unmarshal will be a byte[]."}),"\n"]})]})]})}function F(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(P,{...e})}):P(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const r={},a=s.createContext(r);function l(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);